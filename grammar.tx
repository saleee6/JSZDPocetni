EntityModel:
    entities+=Entity
;

Entity:
    'entity' name=ID properties+=Property (plural=Plural)?
;

Property:
    SimpleProperty | RelationProperty
;

SimpleProperty:
    ('[' constraints+=Constraint[','] ']')? name=ID ':' type=[SimpleType]
;

Constraint:
    type = 'Unique' | type = 'NotNullable' | type='Length' '=' value=INT
;

RelationProperty:
    SimpleRelationProperty | ComplexRelationProperty
;

SimpleRelationProperty:
    name=ID ':' type=[Entity]
;

ComplexRelationProperty:
    '[' relation=Relation ']' name=ID ':' ((collectionType=CollectionType '<' type=[Entity] '>') | (type=[Entity]))
;

Relation:
    type=RelationType (',' decorators+=RelationshipDecorator[','])?
;

RelationType:
    'ManyToOne' | 'OneToMany' | 'ManyToMany' | 'OneToOne'
;

RelationshipDecorator:
    CascadeDecorator | FetchDecorator
;

CascadeDecorator:
    type = 'Cascade' '=' (value = 'PERSIST' | value = 'MERGE' | value = 'REMOVE' | value = 'REFRESH' | value = 'DETACH' | value = 'ALL')
;

FetchDecorator:
    type = 'Fetch' '=' (value = 'LAZY' | value = 'EAGER')
;

SimpleType:
    'type' name=ID
;

CollectionType:
    type=CollectionTypeType
;

CollectionTypeType:
    'List' | 'Set'
;

Plural:
    'plural' '=' value=STRING
;

Comment:
    /\/\/.*$/
;