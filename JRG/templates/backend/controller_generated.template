// Autogenerated from controller_generated.template file at {{time}}
package com.example.demo.generated.controllers;

import com.example.demo.dtos.*;
import com.example.demo.services.{{entity.name}}Service;
import com.example.demo.models.{{entity.name}};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

public class {{entity|return_plural}}GeneratedController {

    @Autowired
    private {{entity.name}}Service {{entity.name|uncapitalize}}Service;

    @GetMapping(value="/get/{id}", produces = "application/json")
    public ResponseEntity<?> get{{entity.name}}(@PathVariable Long id) {
        return new ResponseEntity<>({{entity.name|uncapitalize}}Service.get{{entity.name}}(id), HttpStatus.OK);
    }

    @GetMapping(value="/getAll", produces = "application/json")
    public ResponseEntity<?> getAll{{entity|return_plural}}() {
        return new ResponseEntity<>({{entity.name|uncapitalize}}Service.getAll{{entity|return_plural}}(), HttpStatus.OK);
    }

    @PostMapping(value="/add", consumes = "application/json")
    public ResponseEntity<?> post{{entity.name}}(@RequestBody {{entity.name}}DTO {{entity.name|uncapitalize}}DTO) {
        return new ResponseEntity<{{entity.name}}DTO>({{entity.name|uncapitalize}}Service.store{{entity.name}}({{entity.name|uncapitalize}}DTO), HttpStatus.CREATED);
    }

    @PutMapping(value="/update", consumes = "application/json")
    public ResponseEntity<?> put{{entity.name}}(@RequestBody {{entity.name}}DTO {{entity.name|uncapitalize}}DTO) {
        return new ResponseEntity<{{entity.name}}DTO>({{entity.name|uncapitalize}}Service.store{{entity.name}}({{entity.name|uncapitalize}}DTO), HttpStatus.OK);
    }

    @DeleteMapping(value="/delete/{id}")
    public ResponseEntity<?> delete{{entity.name}}(@PathVariable Long id) {
        {{entity.name|uncapitalize}}Service.delete{{entity.name}}(id);
        return new ResponseEntity<>(HttpStatus.OK);
    }
}