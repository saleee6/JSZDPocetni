// Autogenerated from controller.template file at {{time}}
package com.example.demo.generated.controllers;

import com.example.demo.generated.services.{{entity.name|capitalize}}Service;
import com.example.demo.generated.models.{{entity.name|capitalize}};
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/api/{% if entity.plural %}{{entity.plural.value|uncapitalize}}{% else %}{{entity.name|uncapitalize}}s{% endif %}")
public class {% if entity.plural %}{{entity.plural.value|capitalize}}{% else %}{{entity.name|capitalize}}s{% endif %}Controller {

    @Autowired
    private {{entity.name|capitalize}}Service {{entity.name|uncapitalize}}Service;

    @GetMapping(value="/get/{id}", produces = "application/json")
    public ResponseEntity<?> get{{entity.name|capitalize}}(@PathVariable Long id) {
        return new ResponseEntity<>({{entity.name|uncapitalize}}Service.get{{entity.name|capitalize}}(id), HttpStatus.OK);
    }

    @GetMapping(value="/getAll", produces = "application/json")
    public ResponseEntity<?> getAll{% if entity.plural %}{{entity.plural.value|capitalize}}{% else %}{{entity.name|capitalize}}s{% endif %}() {
        return new ResponseEntity<>({{entity.name|uncapitalize}}Service.getAll{% if entity.plural %}{{entity.plural.value|capitalize}}{% else %}{{entity.name|capitalize}}s{% endif %}(), HttpStatus.OK);
    }

    @PostMapping(value="/add", consumes = "application/json")
    public ResponseEntity<?> post{{entity.name|capitalize}}(@RequestBody {{entity.name|capitalize}} {{entity.name|uncapitalize}}) {
        return new ResponseEntity<{{entity.name|capitalize}}>({{entity.name|uncapitalize}}Service.store{{entity.name|capitalize}}({{entity.name|uncapitalize}}), HttpStatus.CREATED);
    }

    @PutMapping(value="/update", consumes = "application/json")
    public ResponseEntity<?> put{{entity.name|capitalize}}(@RequestBody {{entity.name|capitalize}} {{entity.name|uncapitalize}}) {
        return new ResponseEntity<{{entity.name|capitalize}}>({{entity.name|uncapitalize}}Service.store{{entity.name|capitalize}}({{entity.name|uncapitalize}}), HttpStatus.OK);
    }

    @DeleteMapping(value="/delete/{id}")
    public ResponseEntity<?> delete{{entity.name|capitalize}}(@PathVariable Long id) {
        {{entity.name|uncapitalize}}Service.delete{{entity.name|capitalize}}(id);
        return new ResponseEntity<>(HttpStatus.OK);
    }
}